% upload, scp
# SCP上传文件到服务器
scp <local_file> <user>@<host>:<remote_path>

# SCP上传目录到服务器
scp -r <local_dir> <user>@<host>:<remote_path>

# SCP使用指定端口上传
scp -P <port> <local_file> <user>@<host>:<remote_path>

# 压缩传输以提高速度
scp -C <local_file> <user>@<host>:<remote_path>

# 限制传输带宽(KB/s)
scp -l <limit> <local_file> <user>@<host>:<remote_path>

% download, scp
# SCP从服务器下载文件
scp <user>@<host>:<remote_file> <local_path>

# SCP从服务器下载目录
scp -r <user>@<host>:<remote_dir> <local_path>

# SCP使用指定端口下载
scp -P <port> <user>@<host>:<remote_file> <local_path>

% upload, rsync
# 使用rsync上传并同步
rsync -avz --progress <local_dir>/ <user>@<host>:<remote_dir>/

# 使用rsync上传并删除目标多余文件
rsync -avz --delete <local_dir>/ <user>@<host>:<remote_dir>/

# 上传时排除特定文件
rsync -avz --exclude='*.log' <local_dir>/ <user>@<host>:<remote_dir>/

# 上传大文件并显示进度
rsync -avz --progress <large_file> <user>@<host>:<remote_path>

# 断点续传上传
rsync -avz --partial <local_dir>/ <user>@<host>:<remote_dir>/

% download, rsync
# 使用rsync从服务器下载
rsync -avz --progress <user>@<host>:<remote_dir>/ <local_dir>/

# 下载时排除特定文件
rsync -avz --exclude='*.tmp' <user>@<host>:<remote_dir>/ <local_dir>/

# 只下载新文件(增量下载)
rsync -avz --update <user>@<host>:<remote_dir>/ <local_dir>/

# 下载前先预览要传输的文件
rsync -avzn <user>@<host>:<remote_dir>/ <local_dir>/

# 同步目录到远程主机
rsync -avz <local_dir> <user>@<host>:<remote_dir>

# 从远程主机同步目录
rsync -avz <user>@<host>:<remote_dir> <local_dir>

% batch, transfer
# 批量上传多个文件
scp <file1> <file2> <file3> <user>@<host>:<remote_dir>/

# 批量下载多个文件
scp <user>@<host>:"<remote_file1> <remote_file2>" <local_dir>/

# 使用通配符批量下载
scp <user>@<host>:"<remote_dir>/*.log" <local_dir>/

% sftp, transfer
# SFTP连接服务器
sftp <user>@<host>

# SFTP上传文件
# 在SFTP会话中执行: put <local_file> <remote_path>

# SFTP下载文件
# 在SFTP会话中执行: get <remote_file> <local_path>

# SFTP批量上传
# 在SFTP会话中执行: mput <pattern>

# SFTP批量下载
# 在SFTP会话中执行: mget <pattern>

# SFTP查看远程目录
# 在SFTP会话中执行: ls

# SFTP切换远程目录
# 在SFTP会话中执行: cd <remote_dir>

% ftp, transfer
# 连接FTP服务器
ftp <host>

# 匿名FTP连接
ftp
# 然后输入: open <host>, user: anonymous

# 被动模式FTP连接
ftp -p <host>

# 上传文件到FTP
# 在FTP会话中: put <local_file> <remote_file>

# 从FTP下载文件
# 在FTP会话中: get <remote_file> <local_file>

# 批量上传到FTP
# 在FTP会话中: mput <pattern>

# 批量从FTP下载
# 在FTP会话中: mget <pattern>

# 切换FTP传输模式为二进制
# 在FTP会话中: binary

# 切换FTP传输模式为ASCII
# 在FTP会话中: ascii

% transfer, monitor
# 监控传输进度(使用pv)
pv <large_file> | ssh <user>@<host> 'cat > <remote_file>'

# 在传输时显示网络速度
iftop

# 查看正在进行的文件传输
lsof | grep <user>@<host>

# 查看网络连接状态
netstat -tuln | grep <port>

% transfer, advanced
# 使用nc进行文件传输(接收端)
nc -l <port> > <received_file>

# 使用nc进行文件传输(发送端)
nc <host> <port> < <file_to_send>

# 通过SSH隧道传输文件
ssh -L <local_port>:<remote_host>:<remote_port> <user>@<jump_host>

# 使用tar通过SSH传输目录
tar czf - <local_dir> | ssh <user>@<host> 'cd <remote_path> && tar xzf -'

# 从远程服务器解压传输目录
ssh <user>@<host> 'tar czf - <remote_dir>' | tar xzf - -C <local_path>

# 使用wget下载文件
wget <url> -O <local_file>

# 使用curl下载文件
curl -o <local_file> <url>

# 断点续传下载
wget -c <url>

% transfer, security
# 使用SSH密钥进行SCP传输
scp -i <key_file> <local_file> <user>@<host>:<remote_path>

# 使用SSH密钥进行rsync传输
rsync -avz -e "ssh -i <key_file>" <local_dir>/ <user>@<host>:<remote_dir>/

# 验证传输文件的完整性
md5sum <file>
# 在远程执行: ssh <user>@<host> 'md5sum <remote_file>'

# 加密传输文件
gpg -c <file> && scp <file>.gpg <user>@<host>:<remote_path>